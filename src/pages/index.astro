---
import Layout from '@/layouts/Layout.astro';
import ArticleCard from '@/components/ArticleCard.astro';
import { supabase } from '@/db/supabase';

/*
TO DO:
- Manejar errores
- Mostrar tags (más de 1)
- Comprobar URLS
- Lógica imágenes
- Lógica evitar duplicados
- Ver más.. en categorías
*/

// Consulta artículos con sus categorías
const {data: articleCategories} = await supabase
	.from('articlecategories')
	.select('category!inner(id, name), article!inner(id, title, body, timestamp, author!inner(full_name))');

// Ordenar por fecha más reciente
articleCategories?.sort((a, b) => new Date(b.article.timestamp).getTime() - new Date(a.article.timestamp).getTime());

// Tomar los 5 primeros (5 más recientes)
const lastArticles = articleCategories?.slice(0, 5);

// Definir registro y sus tipos
type Value = { category: string; articles: any[] };
const record: Record<string, Value> = {};

// Agrupar en cada categoría (key) su nombre y el artículo (value)
for (const obj of articleCategories || []) {
	const categoryName = obj.category.name;

	if (!record[categoryName]) {
		record[categoryName] = {
			category: categoryName,
			articles: []
		};
	}

  record[categoryName].articles.push(obj.article);
}

// Convertir registro en un array y transformarlo (tomar 3)
const articlesByCategory = Object.values(record).map(cat => ({
	...cat, // Copia el objeto original
	articles: cat.articles.slice(0, 3)// Sobrescribe la lista de artículos
}));
---

<Layout>
	
	<main class="bg-[#fcf7f8] p-10">
		<h2 class="text-5xl font-semibold mb-3">Últimas noticias</h2>
		<!-- LAST NEWS (FEATURED) -->
		<div class="grid grid-cols-2 grid-rows-6 gap-4">
			{lastArticles?.slice(0, 2).map((article, i) => {
				const rowStart = 1 + i * 3;
				return (
					<div class={`col-start-1 col-span-1 row-span-3 row-start-${rowStart}`}>
						<ArticleCard
							title={article.article.title}
							summary={article.article.body}
							image="/testIndex.png"
							date={new Date(article.article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.article.id}`}
							tags={[article.category.name]}
							featured={true}
						/>
					</div>
				)
			})}
			
			<!-- LAST NEWS (NOT FEATURED) -->
			{lastArticles?.slice(2, 5).map((article, i) => {
				const rowStart = 1 + i * 2;
				return (
					<div class={`col-start-2 col-span-1 row-span-2 row-start-${rowStart}`}>
						<ArticleCard
							title={article.article.title}
							summary={article.article.body}
							image="/testIndex.png"
							date={new Date(article.article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.article.id}`}
							tags={[article.category.name]}
						/>
					</div>
				)
			})}
		</div>

		<!-- CATEGORIES -->
		{articlesByCategory.map((category, i) => (
			<h2 class="text-3xl font-semibold mb-3 mt-6">{category.category}</h2>
			<div class="grid grid-cols-3 grid-rows-1 gap-4">
				{category.articles.map((article, i) => {
					const colStart = i + 1;
					return (
					<div class={`col-star-${colStart} col-span-1`}>
						<ArticleCard
							title={article.title}
							summary={article.body}
							image="/testIndex.png"
							date={new Date(article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.id}`}
							tags={[category.category]}
						/>
					</div>
				)})}
			</div>
		))}
	</main>

</Layout>
