---
import Layout from '@/layouts/Layout.astro';
import ArticleCard from '@/components/ArticleCard.astro';
import { supabase } from '@/db/supabase';

/*
TO DO:
- CORREGIR GRID
- Refactorizar y manejar errores
*/

// Consulta artículos con sus categorías
const {data: articleCategories} = await supabase
	.from('articlecategories')
	.select('category!inner(id, name), article!inner(id, title, body, timestamp, author!inner(full_name))');

// Agregar atributo tags para categorías extras
articleCategories?.forEach(obj => {
  (obj.article as any).tags = [];
});

// Ordenar por fecha más reciente
articleCategories?.sort((a, b) => new Date(b.article.timestamp).getTime() - new Date(a.article.timestamp).getTime());

// Crear un Record para agrupar artículos y sus tipos
type Value = { categoryName: string; categoryId: number; articles: any[] };
const record: Record<string, Value> = {};

// Crear un Map para registrar los artículos ya agregados y acceder a ellos por id
const addedArticles = new Map<number, any>();

// Agrupar en cada categoría (key) su nombre y el artículo (value), evitando duplicados
for (const obj of articleCategories as any|| []) {
	const article = obj.article;
	const articleId = article.id;
	const categoryN = obj.category.name;

	if (addedArticles.has(articleId)) {
		// Si ya fue añadido, añadir esta categoría a los tags del artículo existente
		const existingArticle = addedArticles.get(articleId);
		existingArticle.tags.push(categoryN);
    	continue;
	}

	if (!record[categoryN]) {
		record[categoryN] = {
			categoryName: categoryN,
			categoryId: obj.category.id,
			articles: []
		};
	}

	article.tags.push(categoryN);
	record[categoryN].articles.push(article);
	addedArticles.set(articleId, article);
}

// Tomar los 5 primeros del mapa de añadidos (que serán los más recientes al haber sido ordenados previamente)
const lastArticles = Array.from(addedArticles.values()).slice(0, 5);

// Convertir registro en un array y transformarlo (tomar 3)
const articlesByCategory = Object.values(record).map(cat => ({
	...cat, // Copia el objeto original
	articles: cat.articles.slice(0, 3)// Sobrescribe la lista de artículos
}));
---

<Layout>
	
	<main class="bg-[#fcf7f8] p-10">
		<h2 class="text-5xl font-semibold mb-3">Últimas noticias</h2>
		<!-- LAST NEWS (FEATURED) -->
		<div class="grid grid-cols-2 grid-rows-6 gap-4">
			{lastArticles?.slice(0, 2).map((article, i) => {
				const rowStart = 1 + i * 3;
				return (
					<div class={`col-start-1 col-span-1 row-span-3 row-start-${rowStart}`}>
						<ArticleCard
							title={article.title}
							summary={article.body}
							image={article.imgurl}
							date={new Date(article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.id}`}
							tags={article.tags}
							featured={true}
						/>
					</div>
				)
			})}
			
			<!-- LAST NEWS (NOT FEATURED) -->
			{lastArticles?.slice(2, 5).map((article, i) => {
				const rowStart = 1 + i * 2;
				return (
					<div class={`col-start-2 col-span-1 row-span-2 row-start-${rowStart}`}>
						<ArticleCard
							title={article.title}
							summary={article.body}
							image={article.imgurl}
							date={new Date(article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.id}`}
							tags={article.tags}
						/>
					</div>
				)
			})}
		</div>

		<!-- CATEGORIES -->
		{articlesByCategory.map((category, i) => (
			<div class="flex justify-between items-center mb-3 mt-6">
				<h2 class="text-3xl font-semibold">{category.categoryName}</h2>
				<a href=`/searcharticle?category=${category.categoryId}` class="text-blue-600 font-semibold text-sm hover:underline">Ver todos →</a>
			</div>
			<div class="grid grid-cols-3 grid-rows-1 gap-4">
				{category.articles.map((article, i) => {
					const colStart = i + 1;
					return (
					<div class={`col-star-${colStart} col-span-1`}>
						<ArticleCard
							title={article.title}
							summary={article.body}
							image={article.imgurl}
							date={new Date(article.timestamp).toLocaleDateString('es-ES', { day: 'numeric', month: 'long', year: 'numeric' })}
							author={article.author?.full_name ?? "Anónimo"}
							url={`/articulos/${article.id}`}
							tags={article.tags}
						/>
					</div>
				)})}
			</div>
		))}
	</main>

</Layout>
