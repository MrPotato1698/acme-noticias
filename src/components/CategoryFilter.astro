---
interface Category {
  id: number;
  name: string;
}

interface Props {
  categories: Category[];
  currentCategory: string;
}

const { categories, currentCategory } = Astro.props;
---

<div class="mb-6">
  <h3 class="text-sm font-semibold text-dark mb-2">Categorías</h3>
  <div class="space-y-2 max-h-48 overflow-y-auto pr-2">
    <div class="flex items-center">
      <input
        type="radio"
        id="category-all"
        name="category"
        value=""
        class="w-4 h-4 text-primary focus:ring-primary"
        checked={currentCategory === ''}
      />
      <label for="category-all" class="ml-2 text-sm text-dark">
        Todas las categorías
      </label>
    </div>

    {categories.map((category) => (
      <div class="flex items-center">
        <input
          type="radio"
          id={`category-${category.id}`}
          name="category"
          value={category.id.toString()}
          class="w-4 h-4 text-primary focus:ring-primary"
          checked={currentCategory === category.id.toString()}
        />
        <label for={`category-${category.id}`} class="ml-2 text-sm text-dark">
          {category.name}
        </label>
      </div>
    ))}
  </div>
</div>